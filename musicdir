#!/usr/bin/php
<?php  // -*- php -*-

/**
 * @file Parse files in music directory and save to 'music' database.
 * @todo: configurable musicdir
 * @todo: add option to recurse through directories
 */

if ( getenv("FLACDIR") == FALSE ) {
  $FLACDIR = '/imagine/music/flac';
}
else {
  $FLACDIR = getenv("FLACDIR");
}

if ($argc < 2) {
  print("Add new flac music directories to database\n");
  print("Usage:  musicdir $FLACDIR/Zero/1995-12-31\n");
  print("        musicdir $FLACDIR/Zero/1995-12-31/0-Golden_Road.flac\n");
  exit;
}

$mysqli = new mysqli("localhost", "root", "root", "music")
       or die(mysql_error());

$start_directory = getcwd();

for ($i = 1; $i < $argc; $i++) {
  unset($artists);
  unset($albums);
  unset($file_unders);
  $single = 0;

  //Get a sanitized version of the directory.
  chdir($start_directory);

  $sanitized = str_replace('"', '\\"', $argv[$i]);
  if (substr($sanitized, 0, 1) != '/') {
    $sanitized = $FLACDIR . $sanitized;
  }
  if (chdir($sanitized) == false) {
    fprintf(STDERR, "Can't chdir to '%s'; skipping", $sanitized);
    continue;
  }
  print("Reading from '$sanitized'...\n");

  $directory = $mysqli->real_escape_string(getcwd());

  //Get the names of the track files in the album directory.  They may be in subdirectories.
  $trackfiles = explode("\n", `find -H . '(' -name "*.flac" -o -name "*.mp3" -o -name "*.ogg" ')'`);
  natsort($trackfiles);
  unset($trackfiles[count($trackfiles) - 1]);

  //There are no tracks so we must be deleting an existing album.
  if (count($trackfiles) == 0) {
    delete_album($mysqli, $directory);
    continue;
  }

  //Get the artist, album, title, track number, and play time information for each file in the album directory.
  $tracknumber = 0;
  $trackinfos = array();

  foreach ($trackfiles as $trackfile) {
    $trackfile = str_replace('"', '\\"', $trackfile);
    $info = array();
    $info['file']     = $trackfile;
    $info['seconds']  = 0;
    $info['intro']    = '';
    $info['outro']    = '';
    $info['set']      = '';
    $info['comments'] = '';

    $trackfile = str_replace('`', '\\`', $trackfile);

    if (substr($trackfile, -5, 5) == '.flac') {
      $tags = explode("\n", `metaflac --show-sample-rate --show-total-samples --show-tag=ARTIST --show-tag=ALBUM --show-tag=TITLE --show-tag=TRACKNUMBER "$trackfile"`);

      if (isset($tags[0]) && isset($tags[1]))
        $info['seconds'] = (int)(($tags[1] + $tags[0] / 2) / $tags[0]);

      unset($tags[count($tags) - 1]);
      unset($tags[0]);
      unset($tags[1]);

      foreach ($tags as $tag) {
        list($name, $value) = explode('=', $tag);
        $name = strtolower($name);
        $info[$name] = trim($value);
      }
    }
    else if (substr($trackfile, -4, 4) == '.mp3' || substr($trackfile, -4, 4) == '.ogg') {
      $tags = explode("\n", `id3info "$trackfile"`);

      unset($tags[count($tags) - 1]);

      $t = str_replace('$', '\\$', $trackfile);
      $info['seconds'] = `mp3info -p "%S" "$t"`;

      if (!$info['seconds']) $info['seconds'] = 0;

      foreach ($tags as $tag) {
        switch (substr($tag, 4, 4)) {
          case 'TPE1':
            $info['artist'] = trim(substr($tag, 41));
            break;
          case 'TALB':
            $info['album'] = trim(substr($tag, 35));
            break;
          case 'TIT2':
            $info['title'] = trim(substr($tag, 47));
            break;
          case 'TRCK':
            $info['tracknumber'] = trim(substr($tag, 41));
            break;
        }
      }
    }

    if (!isset($info['artist']) || $info['artist'] == '') $info['artist'] = 'unknown';
    if (!isset($info['album'])  || $info['album']  == '') $info['album']  = 'unknown';
    if (!isset($info['title'])  || $info['title']  == '') $info['title']  = 'unknown';

    if (isset($info['artist'])  && $info['artist'] != '') $artists[$info['artist']] = 1;
    if (isset($info['album'])   && $info['album']  != '') $albums[$info['album']]   = 1;

    if (!isset($info['tracknumber'])) $info['tracknumber'] = $tracknumber + 1;

    $trackinfos[$tracknumber] = $info;
    $tracknumber++;
  }                                     //end foreach $trackfiles

  //There were no artists in any of the track files so make one from the directory path name.
  if (!isset($artists)) {
    $artists[trim(ucwords(strtolower(str_replace('_', ' ', basename(dirname($directory))))))] = 1;
  }

  //Create a "fake" artist name under which to list the album.  This is the artist name with
  //leading punctuation removed if there is only one artist, "Various Artists" otherwise.
  if (count($artists) == 1) {
    $artist = array_keys($artists);
    $artist = $artist[0];
    $fake = ltrim($artist, '!"#$%&\'()*+,-./:;<=>?\\]^_`{|}~ ');
  }
  else {
    $fake = $artist = 'Various Artists';
  }

  //Make an album name from the directory name since the track files didn't supply one.
  if (!isset($albums)) {
    $albums[trim(ucwords(strtolower(str_replace('_', ' ', basename($directory)))))] = 1;
  }

  //Look for a special control files in the directory.  This is messy because the same file name
  //is used for both the old Grateful Dead control files and new control files for this player.
  if (file_exists('z')) {
    $lines = explode("\n", preg_replace("/\t+/", "\t", file_get_contents("z")));
    unset($lines[count($lines) - 1]);

    if (basename(dirname($directory)) == 'The_Grateful_Dead') {
      foreach ($trackinfos as $key => $value) {
        $map[$value['tracknumber']] = $key;
      }

      for ($l = 3; $l < count($lines); $l++) {
        $fields = explode("\t", $lines[$l]);

        if (!isset($map[$l - 2]))
          continue;

        $t = $map[$l - 2];

        $info = &$trackinfos[$t];

        if ($fields[0] != '-') {
          $info['set'] = $fields[0];
        }

        foreach (str_split($fields[2]) as $c) {
          switch ($c) {
            case '-':
              break;
            case '>':
              if ($info['outro'] != '')
                $info['outro'] = '>' . $info['outro'];
              else
                $info['outro'] = '>';
              break;
            case '/':
              $info['outro'] .= '/';
              break;
            case 'f':
              $info['outro'] = 'f';
              break;
            case 'F':
              $info['intro'] = 'f';
              break;
            case '^':
              $info['intro'] = '/';
              break;
          }
        }

        for ($f = 3; $f < count($fields); $f += 4) {
          switch ($fields[$f]) {
            case '+':
              if ($fields[$f + 3] != '-') {
                $info['comments'] .= "\n with {$fields[$f + 3]}";
              }
              else {
                $info['comments'] .= "\n with unknown artist";
              }
              if ($fields[$f + 2] != '-') {
                $info['comments'] .= " on {$fields[$f + 2]}";
              }
              break;

            case '=':
              $c = preg_replace('/; etree #.*$/', '', $fields[$f + 3]);
              $c = preg_replace('/; GDCD-.*$/', '', $c);
              $info['comments'] .= "\n ($c ({$fields[$f + 2]})";
              break;

            default:
              unset($c);

              // to handle e.g.: /imagine/flac/jon/The_Grateful_Dead/1985-06-21/z
              if (count($fields) < ($f + 3))
                continue 2;

              switch ($fields[$f + 2]) {
                case 'defect':
                case 'quality':
                  $c = "{$fields[$f + 3]}";
                break;
                case 'soundboard patch':
                case 'audience patch':
                  $c = preg_replace('/; etree #.*$/', '', $fields[$f + 3]);
                $c = preg_replace('/; GDCD-.*$/', '', $c);
                $c = "$c ({$fields[$f + 2]})";
                break;
              }

              if (isset($c)) {
                if ($fields[$f] == $fields[$f + 1]) {
                  if ($fields[$f] != '-' && $fields[$f] != '0') {
                    list($min, $sec) = explode(':', substr($fields[$f], 1));
                    $c .= sprintf(' (%d:%02d)', $min, $sec);
                  }
                }

                else {
                  if ($fields[$f] == '0' || $fields[$f] == '-') {
                    $c .= " (start";
                  }
                  else {
                    list($min, $sec) = explode(':', substr($fields[$f], 1));
                    $c .= sprintf(' (%d:%02d', $min, $sec);
                  }

                  if ($fields[$f + 1] == '-') {
                    $c .= ' - end)';
                  }
                  else {
                    list($min, $sec) = explode(':', substr($fields[$f + 1], 1));
                    $c .= sprintf(' - %d:%02d)', $min, $sec);
                  }
                }

                $info['comments'] = "\n$c";
              }
              break;
          }
        }
      }
    }
    else {
      foreach ($lines as $line) {
        if (strcmp($line, "single") == 0) {
          $single = 1;
        }

        else if (strchr($line, "\t") != false) {
          list($name, $value) = explode("\t", $line);

          if (strcmp($name, "album") == 0) {
            $album = trim($value);
          }
          else if (strcmp($name, "file-under") == 0) {
            $file_unders[trim($value)] = 1;
          }
        }
      }
    }
  }

  if (!isset($album)) {
    $a = array_keys($albums);
    $album = $a[0];
  }

  //Fill in set information for any non-Dead albums that have differing albums on their tracks.
  if (basename(dirname($directory)) != 'The_Grateful_Dead') {
    foreach ($trackinfos as $info) {
      if ($info['album'] != $trackinfos[0]['album']) {
        foreach ($trackinfos as $track)
          $track['set'] = $track['album'];
        break;
      }
    }
  }

  //There are tracks so either create a new album or update an existing one.
  $album_id = album_id($mysqli, $directory, $album, $artist, $single);

  $sql = "DELETE FROM aa WHERE album=$album_id";
  $mysqli->query($sql) or die($mysqli->error);

  if (!isset($file_unders))
    $file_unders[$fake] = 1;

  foreach ($file_unders as $file_under => $value) {
    $vid = value_id($mysqli, $file_under);
    $sql = "INSERT INTO aa SET album=$album_id, artist=$vid";
    $mysqli->query($sql) or die($mysqli->error);
  }

  print("$album\n");
  foreach ($trackinfos as $info) {
    one_track($mysqli, $album_id, $info['tracknumber'],
              $info['seconds'], $info['file'], $info['artist'], $info['title'],
              $info['intro'], $info['outro'], $info['set'], $info['comments']);

  }
}

//Helper functions
/**
 * @param $value
 * @return $value_id
 */
function value_id($mysqli, $value) {
  $value = $mysqli->real_escape_string($value);
  // get any existing identifier for the value
  $sql = "SELECT id FROM valuet WHERE valuet = '$value'";
  $result = $mysqli->query($sql) or die($mysqli->error);
  if ($mysqli->affected_rows == 0) {
    $sql = "INSERT INTO valuet SET valuet = '$value'";
    $result = $mysqli->query($sql) or die($mysqli->error);
    $sql = "SELECT id FROM valuet WHERE valuet = '$value'";
    $result = $mysqli->query($sql) or die($mysqli->error);
  }
  $row = $result->fetch_assoc();
  return $row['id'];
}

/**
 * @param string  $directory
 * @param string  $album
 * @param string  $artist
 * @param boolean $single
 * @return    int $album_id
 */
function album_id($mysqli, $directory, $album, $artist, $single) {
  //FIXME: conflict exists if ($album == $artist)
  $album_vid = value_id($mysqli, $album);                 //get a unique identifier for the album name
  $artist_vid = value_id($mysqli, $artist);               //get a unique identifier for the "main" artist name

  $album_id = get_album_id($mysqli, $directory);
  if ($album_id) {
    $sql = "DELETE FROM track WHERE id=$album_id";
    $result = $mysqli->query($sql) or die($mysqli->error);
    $sql = "UPDATE album SET album=$album_vid, artist=$artist_vid, single=$single, directory='$directory'
             WHERE id=$album_id";
  }
  else {
    $sql = "INSERT INTO album(album,artist,single,directory)
                 VALUES($album_vid,$artist_vid,$single,'$directory')";
    $result = $mysqli->query($sql) or die($mysqli->error);
    $album_id = get_album_id($mysqli, $directory);
  }
  return $album_id;
}

function get_album_id($mysqli, $directory) {
  $sql = "SELECT id FROM album WHERE directory = '$directory'";  //find out if the album already exists
  $result = $mysqli->query($sql) or die($mysqli->error);
  if ($mysqli->affected_rows == 0) {
    return 0;
  }
  $row = $result->fetch_assoc();              //fetch the id of the existing album
  $album_id = $row['id'];
  return $album_id;
}

function delete_album($mysqli, $directory) {
  $album_id = get_album_id($mysqli, $directory);
  if ($album_id) {
    $sql = "DELETE
 FROM album, track, aa
WHERE album.id = $album_id
  AND track.id = $album_id
  AND aa.album = $album_id";
    $result = $mysqli->multi($sql) or die($mysqli->error);
    print "Deleted album at $directory\n";
  }
  else {
    print "No tracks, and no album to delete at $directory\n";
  }
}

function one_track($mysqli, $id, $number, $seconds, $file, $artist, $title, $intro, $outro, $setList, $comments) {
  $aid = value_id($mysqli, $artist);
  $tid = value_id($mysqli, $title);
  $sid = value_id($mysqli, $setList);
  $file = $mysqli->real_escape_string($file);
  $comments = $mysqli->real_escape_string($comments);
  $sql = "INSERT INTO track(id,number,seconds,file,artist,title,intro,outro,setname,comments)
                     VALUES($id, $number, $seconds, '$file', $aid, $tid, '$intro', '$outro', $sid, '$comments')";
  $mysqli->query($sql) or die($mysqli->error);
  print("  $artist: $title\n");
}
